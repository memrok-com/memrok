services:
  traefik:
    image: traefik:v3.4.4
    container_name: memrok-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme:/acme
    command:
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=memrok
      - --api.dashboard=false
      - --api.insecure=false
      - --log.level=WARN
    labels:
      - "traefik.enable=true"
    networks:
      - memrok

  zitadel:
    restart: unless-stopped
    image: ghcr.io/zitadel/zitadel:v3.3.1
    container_name: memrok-zitadel
    command: 'start-from-init --masterkey "${ZITADEL_MASTERKEY}" --steps /config/init-steps.yaml'
    environment:
      # Machine key and PAT paths for service account
      ZITADEL_FIRSTINSTANCE_MACHINEKEYPATH: /machinekey/memrok-provisioner.json
      ZITADEL_FIRSTINSTANCE_PATPATH: /pat/memrok-provisioner.pat
      ZITADEL_DATABASE_POSTGRES_HOST: postgres
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: ${ZITADEL_DB_PASSWORD}
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: ${MEMROK_DB_ADMIN_PASSWORD}
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: true
      ZITADEL_EXTERNALDOMAIN: ${MEMROK_AUTH_DOMAIN}
      ZITADEL_EXTERNALPORT: 443
      # SMTP Configuration
      ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_HOST: ${ZITADEL_SMTP_HOST}
      ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_USER: ${ZITADEL_SMTP_USER}
      ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_PASSWORD: ${ZITADEL_SMTP_PASSWORD}
      ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_TLS: ${ZITADEL_SMTP_TLS}
      ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_FROM: ${ZITADEL_SMTP_FROM}
      ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_FROMNAME: ${ZITADEL_SMTP_FROMNAME}
      ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_REPLYTOADDRESS: ${ZITADEL_SMTP_REPLYTO}
      # Admin User Configuration  
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME: ${ZITADEL_ADMIN_USERNAME}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_FIRSTNAME: ${ZITADEL_ADMIN_FIRSTNAME}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_LASTNAME: ${ZITADEL_ADMIN_LASTNAME}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_NICKNAME: ${ZITADEL_ADMIN_NICKNAME}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_DISPLAYNAME: ${ZITADEL_ADMIN_DISPLAYNAME}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_EMAIL_ADDRESS: ${ZITADEL_ADMIN_EMAIL}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_EMAIL_VERIFIED: true
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD: ${ZITADEL_ADMIN_PASSWORD}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORDCHANGEREQUIRED: false
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PREFERREDLANGUAGE: en
      # Branding Configuration
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_PRIMARYCOLOR: "#615fff" # indigo-500
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_BACKGROUNDCOLOR: "#f5f5f4" # stone-100
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_WARNCOLOR: "#ff2056" # rose-500
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_FONTCOLOR: "#1c1917" # stone-900
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_PRIMARYCOLORDARK: "#7c86ff" # indigo-400
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_BACKGROUNDCOLORDARK: "#1c1917" # stone-900
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_WARNCOLORDARK: "#ff2056" # rose-400
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_FONTCOLORDARK: "#f5f5f4" # stone-100
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_HIDELOGINNAMESUFFIX: false # Allow users with different email domains
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_ERRORMSGPOPUP: false
      ZITADEL_DEFAULTINSTANCE_LABELPOLICY_DISABLEWATERMARK: false # Keep Zitadel attribution
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./zitadel/init-steps.yaml:/config/init-steps.yaml:ro
      - zitadel-machinekey:/machinekey
      - zitadel-pat:/pat
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zitadel.rule=Host(`${MEMROK_AUTH_DOMAIN}`)"
      - "traefik.http.routers.zitadel.entrypoints=websecure"
      - "traefik.http.routers.zitadel.tls=true"
      - "traefik.http.services.zitadel.loadbalancer.server.port=8080"
    networks:
      - memrok

  postgres:
    restart: unless-stopped
    image: postgres:17-alpine
    container_name: memrok-postgres
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: ${MEMROK_DB_ADMIN_PASSWORD}
      POSTGRES_DB: memrok
      # Zitadel database variables for init script
      ZITADEL_DB_USER: zitadel
      ZITADEL_DB_PASSWORD: ${ZITADEL_DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/20-init-databases.sh:ro
    networks:
      - memrok
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "memrok", "-U", "postgres" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 20s

volumes:
  postgres-data:
  zitadel-machinekey:
  zitadel-pat:


networks:
  memrok:
    name: ${DOCKER_NETWORK:-memrok}
    driver: bridge
