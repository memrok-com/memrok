services:
  traefik:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:8080"  # Traefik dashboard for development
    volumes:
      - ./traefik/certs:/certs:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
    command:
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:8080
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=memrok-dev
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --api.dashboard=true
      - --api.insecure=true
      - --log.level=INFO
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`proxy.dev.memrok.com`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"

  zitadel:
    environment:
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: ${ZITADEL_DB_PASSWORD}
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: ${ZITADEL_DB_ADMIN_PASSWORD}
      ZITADEL_EXTERNALSECURE: true
      ZITADEL_EXTERNALDOMAIN: ${MEMROK_AUTH_DOMAIN}
      ZITADEL_EXTERNALPORT: 443
      ZITADEL_TLS_ENABLED: false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zitadel.rule=Host(`${MEMROK_AUTH_DOMAIN}`)"
      - "traefik.http.routers.zitadel.entrypoints=websecure"
      - "traefik.http.routers.zitadel.tls=true"
      - "traefik.http.services.zitadel.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.zitadel.loadbalancer.server.port=8080"

  zitadel-db:
    environment:
      POSTGRES_PASSWORD: ${ZITADEL_DB_ADMIN_PASSWORD}


networks:
  memrok:
    name: ${DOCKER_NETWORK:-memrok-dev}